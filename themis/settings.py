"""
Django settings for themis project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$8)#qn(pn9la(v^me&u@!u@4-o6b4p3u6x^+4w8yl8ee_7o6%-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '192.168.0.113',
    '127.0.0.1',

]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_for_judges',
    'app_for_competitions',
    'app_main',
    'users',

    'debug_toolbar',
    'django_tables2',


]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'themis.urls'

TEMPLATES = [
    {
        'BACKEND' : 'django.template.backends.django.DjangoTemplates',
        'DIRS'    : [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS' : {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'themis.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME'  : BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Asia/Yekaterinburg'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

LOGIN_REDIRECT_URL = 'home'  # URL-адрес, на который перенаправляет после успешной авторизации;
LOGIN_URL = 'home'  # URL-адрес, на который следует перенаправить неавторизованного пользователя
                    # при попытке посетить закрытую страницу сайта;
LOGOUT_REDIRECT_URL = 'about'  # URL-адрес, на который перенаправляется пользователь после выхода.


INTERNAL_IPS = [
    '127.0.0.1',
]

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    Path(BASE_DIR / "static"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version'                : 1,
    'disable_existing_fields': False,
    # чтобы не перекрывать более верхние уровни логирования
    'formatters'             : {
        'verbose': {
            'format': '[{levelname:<8}: {name:>25}] - {asctime} : {funcName} @ {lineno:04d}: {message}',
            'style' : '{',
        },
        'simple' : {
            'format': '%(levelname)s %(message)s'
        },
    },

    'handlers'               : {
        'console': {  # выводить ошибки в консоль
            'class'    : 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file'   : {  # выводить ошибки в файл
            'class'    : 'logging.FileHandler',
            'filename' : BASE_DIR / 'logs' / 'django.log',  # имя файла
            'formatter': 'verbose',
            'mode'     : 'w',  # для перезаписи файла логирования каждый раз при старте сервера
        },
    },
    'loggers'                : {
        'django'              : {  # для всего проекта
            'handlers': ['console', 'file'],
            'level'   : 'INFO',
        },
        'app_for_judges'      : {  # для моего приложения в проекте
            'handlers' : ['console', 'file'],
            'level'    : 'DEBUG',
            'propagate': True,
            # если есть более высоко стоящие логгеры, то их нужно использовать
        },
        'app_for_competitions': {
            'handlers' : ['console', 'file'],
            'level'    : 'DEBUG',
            'propagate': True,
        },
        'app_main'            : {
            'handlers' : ['console', 'file'],
            'level'    : 'DEBUG',
            'propagate': True,
        },
        'users'               : {
            'handlers' : ['console', 'file'],
            'level'    : 'DEBUG',
            'propagate': True,
        },
    },
}
